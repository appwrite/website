---
layout: post
title: Announcing database operations pricing
description: To ensure Appwrite Cloud's sustainability, we are introducing pricing for database read and write operations.
date: 2025-03-15
cover: /images/blog/announcing-database-operations-pricing/cover.png
timeToRead: 4
author: eldad-fux
category: product
featured: false
callToAction: true
---

Database operations are the backbone of modern applications, enabling developers to store, retrieve, and manipulate data efficiently. With Appwrite's database service, you can perform powerful queries, create complex data structures, and build real-time applications that respond instantly to changes. Our database capabilities have been designed to be both powerful and intuitive, making it easier for developers to focus on building great applications rather than managing infrastructure.

When we launched Appwrite Cloud in beta, we provided generous limits for database operations without additional charges, even though these operations consume significant computational resources. Our database service requires robust infrastructure to handle concurrent operations, maintain data consistency, and deliver fast response times across all types of queries.

Over the past year, we've made substantial improvements to our database infrastructure, optimizing query performance, enhancing indexing capabilities, and implementing advanced caching strategies. These improvements have allowed us to support applications processing millions of database operations monthly while maintaining the reliability and simplicity that Appwrite is known for.

We've been thrilled to see how developers have leveraged our database services to build increasingly sophisticated applications. This widespread adoption confirms our commitment to providing a powerful, accessible, and sustainable platform for all developers.

# Pricing update

As Appwrite continues to scale, we need to ensure our platform remains sustainable while delivering exceptional service. The new pricing for database operations will be effective **starting April 15th, 2025**.

## What will change

We will begin charging for database read and write operations beyond the included quotas in each plan. All plans will continue to include a generous allocation of operations at no additional charge:

- **Free Plan**: 500,000 read operations and 250,000 write operations per month
- **Pro Plan**: 1,750,000 read operations and 750,000 write operations per month, with additional operations available at $0.060 per 100,000 reads and $0.10 per 100,000 writes
- **Scale Plan**: 1,750,000 read operations and 750,000 write operations per month, with additional operations available at $0.060 per 100,000 reads and $0.10 per 100,000 writes
- **Enterprise Plan**: Unlimited read and write operations

This change will help support the infrastructure required to maintain high-performance database services and enable us to continue enhancing our platform.

Please refer to our [Pricing Page](/pricing) for detailed information, including operation costs and included quotas for different plans.

![console image](/images/blog/announcing-database-operations-pricing/usage-component.png)

# How it works

Database operations in Appwrite are categorized into two types:

## Read operations

Any action that retrieves data from your database, including:
- Fetching documents with `getDocument` or `listDocuments`
- Running queries with `find`
- Counting documents with `count`

## Write operations

Any action that modifies data in your database, including:
- Creating documents with `createDocument`
- Updating documents with `updateDocument`
- Deleting documents with `deleteDocument`
- Batch operations that modify multiple documents

**Important to note**: Operations are counted based on the number of documents affected, not API calls. For example, if you fetch a collection of 50 documents with a single API call, this counts as 50 read operations, not as a single operation.

# Your usage

To help prepare for these changes, teams can review their current database operation usage through their organization's usage page or the usage section of specific databases. This will help you understand your usage patterns and plan accordingly.

# Optimizing your database operations

To help you manage your database operations efficiently, here are some best practices:

1. **Use efficient queries**: Filter data on the server side rather than retrieving large datasets and filtering client-side
2. **Implement pagination**: Use the `limit` and `offset` parameters to retrieve only the data you need
3. **Consider caching**: Cache frequently accessed data to reduce repeated read operations
4. **Monitor usage**: Keep track of your database operations through the Appwrite Console

# We're here to help

If you have questions about this pricing change or need assistance optimizing your database operations, please don't hesitate to reach out to us at [billing@appwrite.io](mailto:billing@appwrite.io).

Your success is our priority, and we're committed to helping you make the most of Appwrite's database capabilities while keeping costs predictable and manageable.