---
layout: article
title: Start with Functions
description: Get started quickly with Appwrite Functions. Follow a step-by-step guide to create your first serverless function, define triggers, and execute code.
---
You can create and execute your first Appwrite Function in minutes.

# Create function {% #create-function %} 

Before deploying your function with Git, create a new function attached to your Git repository.

{% only_dark %}
![Create function screen](/images/docs/functions/quick-start/dark/create-function.png)
{% /only_dark %}
{% only_light %}
![Create function screen](/images/docs/functions/quick-start/create-function.png)
{% /only_light %}

1. In the Appwrite Console's sidebar, click **Functions**.
2. Click **Create function**.
3. Under **Connect Git repository**, select your provider.
4. After connecting to GitHub, under **Quick start**, select a starter template.
5. Follow the step-by-step wizard and create the function.
6. The function will be created and a build will begin. Once the build completes, you'll have created your first function.

You can find the code used by the starter template in your newly created Git repository. 
Each push to your Git repo will trigger a new deployment.

## Execute {% #execute %} 
You can execute your Appwrite Function through [many different triggers](/docs/products/functions/execution).
The easiest way to execute your first function is to use the Appwrite Console.

{% only_dark %}
![Execution-screen](/images/docs/functions/quick-start/dark/function-execution.png)
{% /only_dark %}
{% only_light %}
![Execution-screen](/images/docs/functions/quick-start/function-execution.png)
{% /only_light %}

1. In the Appwrite Console's sidebar, click **Functions**.
1. Under the **Executions** tab, click **Execute now**.
1. Click **Execute** to execute the starter template function.
1. Wait for the execution to be marked **completed** and click to view the execution logs.


# Explore {% #explore %}
Use this your first function as a springboard to explore the flexible and powerful features of Appwrite Functions.

{% cards %}
{% cards_item href="/docs/products/functions/development" title="Develop" %}
Learn how to parse request, build responses, and log to Console in Appwrite Functions.
{% /cards_item %}
{% cards_item href="/docs/products/functions/development#response" title="Response" %}
Learn about function response types, like text, json, html, redirect, and empty responses.
{% /cards_item %}
{% cards_item href="/docs/products/functions/deployment" title="Deploy" %}
Learn to deploy Appwrite Functions from Git, the CLI, or manual uploads.
{% /cards_item %}
{% cards_item href="/docs/products/functions/execution" title="Execute" %}
Appwrite Functions can be executed in a variety of ways, like SDK, domains, schedules, events, and more. Learn about executions.
{% /cards_item %}
{% cards_item href="/docs/products/functions/execution#domains" title="Domains" %}
Each Appwrite Function can be executed through HTTP requests against a unique domain. Learn about domains.
{% /cards_item %}
{% cards_item href="/docs/products/functions/runtimes" title="Runtime" %}
Appwrite supports over a dozen runtimes to meet your preferences. Learn about runtimes.
{% /cards_item %}
{% cards_item href="/docs/products/functions/examples" title="Examples" %}
Enjoy learning from examples? Take a look at these example functions.
{% /cards_item %}
{% /cards %}
