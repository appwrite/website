---
layout: article
title: Develop locally
description: Learn to develop Appwrite functions locally.
---

Develop your Appwrite functions locally to make code changes without redeploying your function on every code change and hot reload your code for faster testing.

# Setup {% #setup %}

1. Install the [Docker CLI](https://www.docker.com/products/docker-desktop/)
2. Ensure Docker is running in the background
3. Install the [Appwrite CLI](/docs/tooling/command-line/installation#installation)
4. [Log in](/docs/tooling/command-line/installation#get-started) to your Appwrite account using `appwrite login`
5. [Initialize your project](/docs/tooling/command-line/installation#initialization) and create the `appwrite.json` file

We use Docker to replicate the production environment for the local deployment of functions. These can be executed locally with the `appwrite run functions` CLI command, which requires initializing a project with an `appwrite.json` file. The CLI also supports various other [CLI commands](/docs/tooling/command-line/commands).

{% arrow_link href="/docs/tooling/command-line/functions" %}
Learn more about deploying functions using CLI
{% /arrow_link %}

# Develop {% #develop %}

Use the `appwrite run functions` command to develop your function locally.

```sh
appwrite run functions
? Which function would you like to develop locally? My Awesome Function ("<FUNCTION_ID>")

runtime   │ entrypoint  │ path                           │ commands     
───────────┼──────────────┼───────────────────────────────────┼─────────────
node-16.0 │ src/main.js │ functions/<FUNCTION_ID>        │ npm install

ℹ Info: If you wish to change your local settings, update the appwrite.json file and rerun the 'appwrite run' command.
♥ Hint: Permissions, events, CRON and timeouts dont apply when running locally.
ℹ Info: Pulling Docker image ...
♥ Hint: This may take a few minutes, but we only need to do this once.
ℹ Info: Building function using Docker ...
Preparing for build ...

Building ...


added 4 packages, and audited 5 packages in 2s


1 package is looking for funding
  run `npm fund` for details


found 0 vulnerabilities

Packing build ...

Build finished.

ℹ Info: Starting function using Docker ...
♥ Hint: Function automatically restarts when you edit your code.
✓ Success: Visit http://localhost:3000/ to execute your function.
```

This command helps you efficiently develop your Appwrite functions on your local machine. You can also hot reload your function code as you develop locally, so you will see your code changes instantly without having to wait for it to build. When developing your Appwrite function locally, it will receive headers like when you develop a function in the Console.

{% arrow_link href="/docs/products/functions/develop" %}
Learn more about developing a function
{% /arrow_link %}

# Headers {% #headers %}

Appwrite functions receive various headers, like `x-appwrite-key` and `x-appwrite-event`. To view all the received headers, use the following:

```javascript
JSON.stringify(req.headers); // String key-value pairs of all request headers, keys are lowercase
```

You can use headers like dynamic API keys in your function, which give you access to your project services and allow you to operate without sessions. To configure your dynamic API key scopes, navigate to **Functions** > **Settings** > **Scopes**.

{% arrow_link href="/docs/products/functions/develop" %}
Learn more about dynamic API keys
{% /arrow_link %}

Once you have confirmed the headers you want for your function and made all your code changes, push your function to the Cloud using the CLI.

# Push function {% #push-function %}

Once you've developed your function, push it by running the `appwrite push functions` CLI command.

```sh
appwrite push functions
```