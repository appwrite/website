---
layout: article
title: Develop locally
description: Learn to develop Appwrite functions locally.
---

Develop your Appwrite functions locally so you can make code changes without redeploying your function on every code change.

# Setup {% #setup %}

1. Install the [Docker CLI](https://www.docker.com/products/docker-desktop/)
2. Ensure Docker is running in the background
3. Install the [Appwrite CLI](/docs/tooling/command-line/installation)
4. [Log in](/docs/tooling/command-line/installation#get-started) to your Appwrite account using `appwrite login`
5. [Initialize your project](/docs/tooling/command-line/installation#initialization) and create the `appwrite.json` file

We use Docker to simulate the production environment precisely so that we can deploy a function locally. The `appwrite run functions` command allows functions to be run locally, and the CLI is needed to accomplish this. The CLI also allows other [CLI commands](/docs/tooling/command-line/commands), but initializing a project with `appwrite.json` file is required to run commands like `appwrite run functions`.

{% arrow_link href="/docs/tooling/command-line/functions" %}
Learn more about deploying functions using CLI
{% /arrow_link %}

# Locally develop your function {% #locally-develop-your-function %}

Use the `appwrite run functions` command to develop your function locally.

```sh
appwrite run functions
? Which function would you like to develop locally? My Awesome Function (<FUNCTION_ID>)

runtime   │ entrypoint  │ path                           │ commands     
───────────┼──────────────┼───────────────────────────────────┼─────────────
node-16.0 │ src/main.js │ functions/<FUNCTION_ID>        │ npm install

ℹ Info: If you wish to change your local settings, update the appwrite.json file and rerun the 'appwrite run' command.
♥ Hint: Permissions, events, CRON and timeouts dont apply when running locally.
ℹ Info: Pulling Docker image ...
♥ Hint: This may take a few minutes, but we only need to do this once.
ℹ Info: Building function using Docker ...
Preparing for build ...

Building ...


added 4 packages, and audited 5 packages in 2s


1 package is looking for funding
  run `npm fund` for details


found 0 vulnerabilities

Packing build ...

Build finished.

ℹ Info: Starting function using Docker ...
♥ Hint: Function automatically restarts when you edit your code.
✓ Success: Visit http://localhost:3000/ to execute your function.
```

This command helps you efficiently develop your Appwrite functions on your local machine. When developing your Appwrite function locally, it will receive headers like when you develop a function in the Console.

{% arrow_link href="/docs/products/functions/develop" %}
Learn more about developing a function
{% /arrow_link %}

# Headers {% #headers %}

Appwrite functions receive various headers, like `x-appwrite-key` and `x-appwrite-event`. To view all the received headers, use the following req object:

```javascript
JSON.stringify(req.headers); // String key-value pairs of all request headers, keys are lowercase
```

An example of the function headers response:

```sh
{
  "host": "localhost:3000",
  "connection": "keep-alive",
  "sec-ch-ua": "\"Google Chrome\";v=\"127\"",
  "sec-ch-ua-mobile": "?0",
  "user-agent": "Chrome/127.0.0.0 Safari/537.36",
  "sec-ch-ua-platform": "\"Windows\"",
  "accept": "image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8",
  "sec-fetch-site": "same-origin",
  "sec-fetch-mode": "no-cors",
  "sec-fetch-dest": "image",
  "referer": "http://localhost:3000/",
  "accept-encoding": "gzip, deflate, br, zstd",
  "accept-language": "en-US,en;q=0.9",
  "cookie": "<COOKIE>",
  "x-appwrite-trigger": "http",
  "x-appwrite-event": "",
  "x-appwrite-user-id": "",
  "x-appwrite-user-jwt": "<JWT_TOKEN>"
}
```

{% arrow_link href="/docs/products/functions/develop#headers" %}
Learn more about function headers
{% /arrow_link %}

Once you have confirmed the headers you want for your function after executing it and making all your code changes, push your function to the Cloud using the CLI.

# Push function {% #push-function %}

Once you've developed your function, push it by running the `appwrite push functions` CLI command.

```sh
appwrite push functions
```