---
layout: tutorial
title: Set up Appwrite
description: Initialize Appwrite in your Apple project.
step: 3
---

# Create project {% #create-project %}

Head to the [Appwrite Console](https://cloud.appwrite.io/console).

{% only_dark %}
![Create project screen](/images/docs/quick-starts/dark/create-project.png)
{% /only_dark %}
{% only_light %}
![Create project screen](/images/docs/quick-starts/create-project.png)
{% /only_light %}

If this is your first time using Appwrite, create an account and create your first project.

Then, under **Add a platform**, add an **Apple app**. The **bundle identifier** should be the same as the one you used when creating your app.
For this app, it should be **product name** as `Ideas Tracker` and **bundle identifier** as `example.IdeasTracker` 

{% only_dark %}
![Add a platform](/images/docs/quick-starts/dark/add-platform.png)
{% /only_dark %}
{% only_light %}
![Add a platform](/images/docs/quick-starts/add-platform.png)
{% /only_light %}

You can skip optional steps.

# Initialize Appwrite SDK {% #init-sdk %}

To use Appwrite in our SwiftUI app, we'll need to find our project ID. Find your project's ID in the **Settings** page. 

{% only_dark %}
![Project settings screen](/images/docs/quick-starts/dark/project-id.png)
{% /only_dark %}
{% only_light %}
![Project settings screen](/images/docs/quick-starts/project-id.png)
{% /only_light %}

Then, create a file under [Service/Appwrite.swift](https://github.com/appwrite/demos-for-apple/blob/main/IdeasTracker/IdeasTracker/Service/Appwrite.swift)
where we'll initialize the Appwrite SDK. 

```client-apple
import Foundation
import Appwrite
import AppwriteModels
import JSONCodable

class Appwrite: ObservableObject {
    static let shared = Appwrite()

    var client: Client
    var account: Account
    var databases: Databases

    public init() {
        self.client = Client()
            .setEndpoint("https://cloud.appwrite.io/v1")
            .setProject("<YOUR_PROJECT_ID>")
        
        self.account = Account(client)
        self.databases = Databases(client)
    }
}
```

Notice the use of a ` static let shared = Appwrite()` singleton to ensure we only have one instance of the Appwrite client.

```client-apple
...
class Appwrite: ObservableObject {
    {% highlighted %}
    static let shared = Appwrite()
    {% /highlighted %}
    var client: Client
    var account: Account
...
```