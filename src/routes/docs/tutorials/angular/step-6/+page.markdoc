---
layout: tutorial
title: Add database
description: Add a database to your Angular application using Appwrite Web SDK.
step: 6
---
# Create collection
In Appwrite, data is stored as a collection of documents. Create a collection in the [Appwrite Console](https://cloud.appwrite.io/) to store our ideas.

{% only_dark %}
![Create project screen](/images/docs/tutorials/dark/idea-tracker-collection.png)
{% /only_dark %}
{% only_light %}
![Create project screen](/images/docs/tutorials/idea-tracker-collection.png)
{% /only_light %}

Create a new collection with the following attributes:
| Field       | Type   | Required |
|-------------|--------|----------|
| userId      | String | Yes      |
| title       | String | Yes      |
| description | String | No       |

# Ideas context

Now that you have a collection to hold ideas, we can read and write to it from our app. We will create an Angular service to manage our ideas.

Create a new file `src/app/ideas.service.js` and add the following code to it.

```js
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { databases } from '../appwrite';
import { ID, Query } from 'appwrite';

export const IDEAS_DATABASE_ID = '<YOUR_DATABASE_ID>'; // Replace with your database ID
export const IDEAS_COLLECTION_ID = '<YOUR_COLLECTION_ID>'; // Replace with your collection ID

@Injectable({
  providedIn: 'root'
})
export class IdeasService {
  private ideasSubject = new BehaviorSubject([]);
  ideas$ = this.ideasSubject.asObservable();

  async add(idea) {
    const response = await databases.createDocument(
      IDEAS_DATABASE_ID,
      IDEAS_COLLECTION_ID,
      ID.unique(),
      idea
    );
    this.fetchIdeas();
  }

  async remove(id) {
    await databases.deleteDocument(IDEAS_DATABASE_ID, IDEAS_COLLECTION_ID, id);
    this.fetchIdeas();
  }

  async fetchIdeas() {
    const response = await databases.listDocuments(
      IDEAS_DATABASE_ID,
      IDEAS_COLLECTION_ID,
      [Query.orderDesc('$createdAt'), Query.limit(10)]
    );
    this.ideasSubject.next(response.documents);
  }

  init() {
    this.fetchIdeas();
  }
}
```

