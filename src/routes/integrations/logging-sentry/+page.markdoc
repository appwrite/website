---
layout: integration
title: Logging with Sentry
description: Store logs and track issues on your Appwrite instance
date: 2024-07-30
featured: false
isPartner: true
isNew: true
cover: /images/integrations/logging-sentry/cover.png
category: logging
product: 
    avatar: '/images/integrations/avatars/sentry.png'
    vendor: Sentry
    description: 'Sentry is an open-source error-tracking and performance-monitoring tool designed to help developers identify, diagnose, and fix issues in real-time.'
platform: 
    - 'Self-hosted'
images: 
    - /images/integrations/logging-sentry/cover.png
    - /images/integrations/logging-sentry/project.png
    - /images/integrations/logging-sentry/issues.png
    - /images/integrations/logging-sentry/issue-details.png
---

Sentry is an open-source error-tracking and performance-monitoring tool designed to help developers identify, diagnose, and fix issues in real-time. It provides comprehensive insights into application health by capturing and analyzing error events, performance metrics, and user feedback. Sentry supports multiple programming languages and frameworks, making it versatile for various development environments. With features like stack traces, context data, and alerting, Sentry allows teams to quickly pinpoint the root cause of issues and improve the overall quality and reliability of their software applications.

# How does the integration work?

If you are using self-hosting Appwrite, you can use the Sentry provider for error-tracking and logging for your Appwrite instance.

# How to implement

To implement the Sentry provider for logging, there are several steps you must complete:

## Step 1: Set up Sentry

First, [sign up on Sentry](https://sentry.io/signup/) and create a new project.

![Create project](/images/integrations/logging-sentry/project.png)

Head to **Settings** > **Projects** > Select your Sentry project > **Client Keys (DSN)**. Save the DSN for further usage.

## Step 2: Add Sentry provider to your Appwrite instance

For this step, you must [self-host Appwrite](https://appwrite.io/docs/advanced/self-hosting) if you havenâ€™t already.

To add the Sentry provider, you need to slightly reconfigure your DSN. Your Sentry DSN is made up of 3 parts: **public key**, **URI**, and **project ID**. The Appwrite logging configuration expects a string in the format `SENTRY_PUBLIC_KEY;SENTRY_PROJECT_ID`. For example, if your Sentry DSN is `https://public@sentry.example.com/1`, then the Appwrite logging configuration will be `public;1`.

Visit the `.env` file created for your Appwrite instance and update the following environment variables:

```bash
_APP_LOGGING_PROVIDER=sentry
_APP_LOGGING_CONFIG=SENTRY_PUBLIC_KEY;SENTRY_PROJECT_ID
```

After that, run the following Docker Compose commands in your terminal to restart your Appwrite containers and verify if the changes have been successfully applied:

```bash
docker compose up -d --force-recreate
docker compose exec appwrite vars
```

## Step 3: Test the provider

Once the Sentry provider is configured, run the following command in your terminal:

```bash
docker compose exec appwrite ssl --domain="wrongdomain.com"
```

Doing so will show errors in your Sentry **Issues** page.

![Issues](/images/integrations/logging-sentry/issues.png)

You can also view the error details for more information.

![Issue details](/images/integrations/logging-sentry/issue-details.png)

# Read more about Sentry and Appwrite

If you would like to learn more about Sentry and Appwrite, we have some resources that you should visit:

- [Sign up for Sentry](https://sentry.io/signup/)
- [Handling errors in Appwrite self-hosted instances](https://appwrite.io/docs/advanced/self-hosting/production#errors)