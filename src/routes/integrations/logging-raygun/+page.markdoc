---
layout: integration
title: Logging with Raygun
description: Store logs and track issues on your Appwrite instance
date: 2024-07-30
featured: false
isPartner: true
isNew: true
cover: /images/integrations/logging-raygun/cover.png
category: logging
product:
    avatar: '/images/integrations/avatars/raygun.png'
    vendor: Raygun
    description: 'Raygun is an application performance monitoring (APM) and error tracking tool designed for software developers to identify and resolve issues in their applications quickly. It provides real-time insights into software performance, error diagnostics, and user experience, helping teams to detect, diagnose, and fix errors faster. With features like crash reporting, real user monitoring, and deployment tracking, Raygun helps ensure the stability and efficiency of applications.'
platform:
    - 'Self-hosted'
images:
    - /images/integrations/logging-raygun/cover.png
    - /images/integrations/logging-raygun/api-key.png
    - /images/integrations/logging-raygun/crash-reporting.png
    - /images/integrations/logging-raygun/error.png
---

Raygun is an application performance monitoring (APM) and error tracking tool designed for software developers to identify and resolve issues in their applications quickly. It provides real-time insights into software performance, error diagnostics, and user experience, helping teams to detect, diagnose, and fix errors faster. With features like crash reporting, real user monitoring, and deployment tracking, Raygun helps ensure the stability and efficiency of applications, making it an essential tool for maintaining high-quality software and delivering a seamless user experience.

# How does the integration work?

If you are using self-hosting Appwrite, you can use the Raygun provider for error-tracking and logging for your Appwrite instance.

# How to implement

To implement the Raygun provider for logging, there are several steps you must complete:

## Step 1: Sign up for Raygun

First, [sign up on Raygun](https://app.raygun.com/signup?product=cr) (pick **Crash Reporting** as the product you’re most interested in) and create your first application. Head to **Application settings** from the left-side navbar and copy your **API Key**.

![API key](/images/integrations/logging-raygun/api-key.png)

## Step 2: Add Raygun provider to your Appwrite instance

For this step, you must [self-host Appwrite](https://appwrite.io/docs/advanced/self-hosting) if you haven’t already.

Visit the `.env` file created for your Appwrite instance and update the following environment variables:

```bash
_APP_LOGGING_PROVIDER=raygun
_APP_LOGGING_CONFIG=RAYGUN_API_KEY
```

After that, run the following Docker Compose commands in your terminal to restart your Appwrite containers and verify if the changes have been successfully applied:

```bash
docker compose up -d --force-recreate
docker compose exec appwrite vars
```

## Step 3: Test the provider

Once the Raygun provider is configured, run the following command in your terminal:

```bash
docker compose exec appwrite ssl --domain="wrongdomain.com"
```

Doing so will show errors in your Raygun Crash Reporting dashboard.

![Raygun Crash Reporting](/images/integrations/logging-raygun/crash-reporting.png)

You can also view the error summary for further details.

![Error](/images/integrations/logging-raygun/error.png)

# Read more about Raygun and Appwrite

If you would like to learn more about Raygun and Appwrite, we have some resources that you should visit:

- [Sign up for Raygun](https://app.raygun.com/signup?product=cr)
- [Handling errors in Appwrite self-hosted instances](https://appwrite.io/docs/advanced/self-hosting/production#errors)