@use '../abstract' as *;

.#{$p}-input-text {
  @mixin input-light-mode {
    --p-input-placeholder-text-color: var(--aw-color-secondary);
    --p-input-focus-box-shadow-color: var(--aw-color-black) / 0.10;

    --p-input-text-color-default: var(--aw-color-primary);
    --p-input-bg-color-default: var(--aw-color-smooth);
    --p-input-border-color-default: var(--aw-color-offset);

    --p-input-text-color-hover: var(--p-input-text-color-default);
    --p-input-bg-color-hover: var(--aw-color-smooth);
    --p-input-border-color-hover: var(--aw-color-primary);

    --p-input-text-color-active: var(--p-input-text-color-default);
    --p-input-bg-color-active: var(--aw-color-smooth);
    --p-input-border-color-active: var(--aw-color-primary);

    --p-input-text-color-disabled: var(--aw-color-secondary);
    --p-input-bg-color-disabled: var(--aw-color-smooth);
    --p-input-border-color-disabled: var(--aw-color-offset);

    --p-input-text-color-focus: var(--p-input-text-color-default);
    --p-input-bg-color-focus:  var(--aw-color-smooth);
    --p-input-border-color-focus: var(--aw-color-primary);

    //--p-input-text-color-error: var(--aw-color-greyscale-700);
    //--p-input-bg-color-error: var(--aw-color-white);
    --p-input-border-color-error: var(--aw-color-red-500);
  }
  @mixin input-dark-mode {
    --p-input-focus-box-shadow-color: var(--aw-color-white) / 0.16;

    --p-input-text-color-default: var(--aw-color-primary);
    --p-input-bg-color-default: var(--aw-color-smooth);
    --p-input-border-color-default: var(--aw-color-offset);
    --p-input-border-color-error-default: var(--aw-color-red-500);

    --p-input-text-color-hover: var(--p-input-text-color-default);
    --p-input-bg-color-hover: var(--aw-color-smooth);
    --p-input-border-color-hover: var(--aw-color-primary);

    --p-input-text-color-active: var(--p-input-text-color-default);
    --p-input-bg-color-active: var(--aw-color-smooth);
    --p-input-border-color-active: var(--aw-color-primary);

    --p-input-text-color-disabled: var(--aw-color-secondary);
    --p-input-bg-color-disabled: var(--aw-color-smooth);
    --p-input-border-color-disabled:var(--aw-color-offset);

    --p-input-text-color-focus: var(--p-input-text-color-default);
    --p-input-bg-color-focus: var(--aw-color-smooth);
    --p-input-border-color-focus: var(--aw-color-primary);

    //--p-input-text-color-error: var(--aw-color-greyscale-700);
    //--p-input-bg-color-error: var(--aw-color-white);
    --p-input-border-color-error: var(--aw-color-red-500);
  }

  @include input-light-mode();
  --p-input-text-color: var(--p-input-text-color-default);
  --p-input-bg-color: var(--p-input-bg-color-default);
  --p-input-border-color: var(--p-input-border-color-default);

  #{$theme-dark} & {
    @include input-dark-mode();
  }
  #{$theme-light} & {
    @include input-light-mode();
  }

  color: hsl(var(--p-input-text-color));
  background-color: hsl(var(--p-input-bg-color));
  border: solid pxToRem(1) hsl(var(--p-input-border-color));

  display:flex; align-items:center; gap:pxToRem(4);
  padding-inline:pxToRem(16); padding-block:pxToRem(12);
  border-radius:pxToRem(8); font-size:pxToRem(16); line-height:1;
  white-space:nowrap;

  

  &::placeholder      { color:hsl(var(--p-input-placeholder-text-color)); }

  /* reset pink box-shadow */
  &.is-error,
  &.is-warning,
  &.is-success        { box-shadow:none; }

  &:hover:where(:not(#{$disabled})) {
    --p-input-bg-color: var(--p-input-bg-color-hover);
    --p-input-border-color: var(--p-input-border-color-hover);
  }
  &:is(:focus) {
    --p-input-bg-color: var(--p-input-bg-color-focus);
    --p-input-border-color: var(--p-input-border-color-focus);
    box-shadow: 0 0 0 pxToRem(4) hsl(var(--p-input-focus-box-shadow-color));
  }
  &:is(:active) {
    --p-input-bg-color: var(--p-input-bg-color-active);
    --p-input-border-color: var(--p-input-border-color-active);
    box-shadow: 0 0 0 pxToRem(4) hsl(var(--p-input-focus-box-shadow-color));
    border-width:pxToRem(1);
  }
  &:is(#{$disabled}) {
    --p-input-text-color: var(--p-input-text-color-disabled);
    --p-input-bg-color: var(--p-input-bg-color-disabled);
    --p-input-border-color: var(--p-input-border-color-disabled);
    opacity: 0.4;
  }

  &.is-error          { --p-input-border-color: var(--p-input-border-color-error); }
  &.is-warning        {  }
  &.is-success        {  }

  &-search-wrapper {
    position:relative; min-inline-size:pxToRem(350);
    input { block-size:pxToRem(48); padding-inline-start:pxToRem(40);  }
    .icon-search,
    .#{$p}-icon-search {
      position:absolute; inset-block-start:pxToRem(16);  inset-inline-start:pxToRem(16);
      line-height:1;
    }
  }

  &.is-reset-input-inside {
    input { all:unset; display:block; inline-size:100%; text-align:left; }
  }

}

textarea.#{$p}-input-text {
  padding-inline: pxToRem(16);
  padding-block: pxToRem(12);
}

.#{$p}-subscribe-input {
  padding: pxToRem(4); padding-inline-start:pxToRem(16);
  ::placeholder      { color:hsl(var(--aw-color-primary)); opacity:0.64; }
}

.#{$p}-form {
  &-list {
    display:grid;
    &.is-two-columns {
      @media #{$break2open} {
        grid-template-columns: repeat(2, 1fr);
      }
    }
  }
  &-item {
    @media #{$break2open} {
      &.is-column-span-2 { grid-column:span 2;}
    }
  }
}